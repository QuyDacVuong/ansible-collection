; {{ ansible_managed }}

[startup]
sysId=1
TargetEnvironment=IOM

[STATICCONNECT]
daemonLogDbmAddress=ip:{{ oltp_host }}:2348
daemonLogDbmInstance=AuxDbmServerInstance

adminAddress=ip:{{ lobby_host }}:2348
adminInstance=AuxAdminServerInstance

templateServerAddress={{ TEMPLATESERVER }}
templateServerInstance=TemplateServerInstance
templateServerConnType=casino

ROOltpAddress=ip:{{ oltp_host }}:2348
ROOltpInstance=AuxROOltpDbmServerInstance

{{ noncritical_automationdbd_jobs }}

{{ noncritical_automationdbd_sendAlertEmail }}


{{ noncritical_automationdbd_emailStuckSessions }}

[resolveStuckSessions]
queryDbm=ROOltp
processDbm=admin
itRetryDays=5
normalRetryDays=70
schedule=/5min

[finalizeIdleGames]
queryDbm=ROOltp
processDbm=admin
schedule=/5min
timeToLive=86400

[LOGGER]
server=ip:{{ hercules_host }}:9322
station={{ stationname }}.C_STATS.AuxDbdAutomation-{{ hostvars[inventory_hostname]['private_ip_address'].split('.')[-1] }}
UseLogger=1

[telemetry.targets]
hercules = true
gateway = true
[telemetry.gateway.conn-params]
address = ip:127.0.0.1:5447
instance = TelgatewayInstance
[telemetry.metrics.tags]
application = AuxDbdAutomation
environment = {{ hostvars[inventory_hostname].tags.Environment }}
name = {{ hostvars[inventory_hostname].tags.Name }}
instanceid = {{ hostvars[inventory_hostname].instance_id }}
platform = {{ hostvars[inventory_hostname].tags.Platform }}
zone = {{ hostvars[inventory_hostname].tags.Zone }}
station_name = {{ stationname }}.C_STATS.AuxDbdAutomation-{{ hostvars[inventory_hostname]['private_ip_address'].split('.')[-1] }}
service_name = AuxDbdAutomation
[telemetry.metrics.filters.1]
regex = .*
