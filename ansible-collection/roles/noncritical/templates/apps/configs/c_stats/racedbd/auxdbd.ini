; {{ ansible_managed }}

[startup]
sysId=1
TargetEnvironment=IOM

[STATICCONNECT]
RORaceDbmAddress=ip:{{ oltp_host }}:2348
RORaceDbmInstance=RaceDbmServerProxyInstance

RaceDbmAddress=ip:{{ oltp_host }}:2348
RaceDbmInstance=RaceDbmServerProxyInstance

ROAbeDbmAddress=ip:{{ oltp_host }}:2348
ROAbeDbmInstance=AbeRODbmServerProxyInstance

AbeDbmAddress=ip:{{ oltp_host }}:2348
AbeDbmInstance=AbeDbmServerProxyInstance


[jobs]
cleanupRaces=0
cleanupBonuses=0

[cleanupRaces]
queryDbm=RORaceDbm
processDbm=RaceDbm
schedule=/5min

[cleanupBonuses]
queryDbm=ROAbeDbm
processDbm=AbeDbm
schedule=/1hour
daysToLive=7
queryLimit=2000

[LOGGER]
server=ip:{{ hercules_host }}:9322
station={{ stationname }}.C_STATS.AuxDbdRace-{{ hostvars[inventory_hostname]['private_ip_address'].split('.')[-1] }}
UseLogger=1

[telemetry.targets]
hercules = true
gateway = true
[telemetry.gateway.conn-params]
address = ip:127.0.0.1:5447
instance = TelgatewayInstance
[telemetry.metrics.tags]
application = AuxDbdRace
environment = {{ hostvars[inventory_hostname].tags.Environment }}
name = {{ hostvars[inventory_hostname].tags.Name }}
instanceid = {{ hostvars[inventory_hostname].instance_id }}
platform = {{ hostvars[inventory_hostname].tags.Platform }}
zone = {{ hostvars[inventory_hostname].tags.Zone }}
station_name = {{ stationname }}.C_STATS.AuxDbdRace-{{ hostvars[inventory_hostname]['private_ip_address'].split('.')[-1] }}
service_name = AuxDbdRace
[telemetry.metrics.filters.1]
regex = .*