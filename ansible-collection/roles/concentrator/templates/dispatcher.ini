; {{ ansible_managed }}

[comm]
{% if concentrator_comm_alias %}
{{ concentrator_comm_alias }}
{% endif %}

rule=ip:127.0.0.1:5447 pyrtcp0://127.0.0.1:5447
{% if concentrator_comm_extra_rules %}
{{ concentrator_comm_extra_rules }}
{% endif %}

{% if concentrator_comm_extra_options %}
{{ concentrator_comm_extra_options }}
{% endif %}

{% if concentrator_managers %}
[managers]
{{ concentrator_managers }}
{% endif %}

{% if concentrator_tcpmux %}
[tcpmux]
{{ concentrator_tcpmux }}
{% endif %}

{% if concentrator_smemmux %}
[smemmux]
{{ concentrator_smemmux }}
{% endif %}

{% if concentrator_sslmp_extra_options %}
[sslmp]
{{ concentrator_sslmp_extra_options }}
{% endif %}

[tcp]
{% if concentrator_tcp %}
{{ concentrator_tcp }}
{% endif %}

{% if concentrator_tcpd %}
[tcpd]
{{ concentrator_tcpd }}
{% endif %}

{% if concentrator_udt %}
[udt]
{{ concentrator_udt }}
{% endif %}

[restrictconnections]
{% if concentrator_restrictconnections %}
{{ concentrator_restrictconnections }}
{% endif %}

[restrictsubscription]
{% if concentrator_restrictsubscription %}
{{ concentrator_restrictsubscription }}
{% endif %}

[subscrencryption]
1=tmMejs74p

[logger]
{% if concentrator_logger %}
{{ concentrator_logger }}
{% endif %}

[telemetry.targets]
hercules = true
gateway = true
[telemetry.gateway.conn-params]
address = ip:127.0.0.1:5447
instance = TelgatewayInstance
[telemetry.metrics.tags]
application = c_concentrator
environment = {{ hostvars[inventory_hostname].tags.Environment }}
name = {{ hostvars[inventory_hostname].tags.Name }}
instanceid = {{ hostvars[inventory_hostname].instance_id }}
platform = {{ hostvars[inventory_hostname].tags.Platform }}
zone = {{ hostvars[inventory_hostname].tags.Zone }}
station_name = {{ stationname }}.CONCENTRATOR-{{ hostvars[inventory_hostname]['private_ip_address'].split('.')[-1] }}
service_name = c_concentrator
[telemetry.metrics.filters.1]
regex = .*
