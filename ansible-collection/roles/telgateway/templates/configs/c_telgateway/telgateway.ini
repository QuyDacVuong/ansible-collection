;CONNECTION HANDLED VIA ESL - STATIC + DYNAMIC

[metric_options]
; An interval of timer that performs stale metrics cleanup, in seconds. Default is 60. Non-positive value means cleanup
; is disabled, metrics won't expire.
cleanup_interval_sec=60

; A life time of each metric in seconds. Counted from a last metric value update. Note that an actual metric lifetime is
; in [lifetime_sec, lifetime_sec + cleanup_interval_sec] interval because cleanup is performed by timer.
lifetime_sec=300

; A name of meter for OpenTelemetry SDK, must not be empty string. Default is "meter". 
; See https://opentelemetry.io/docs/specs/otel/metrics/sdk/#meter-creation for details.
meter_name=meter

; OpenTelemetry SDK library version. Default is "1.2.0"
library_version=1.2.0

; Represents PeriodicExportingMetricReaderOptions structure fields
[metric_reader]
; The time interval between two consecutive exports to OpenTelemetry SDK. In milliseconds. Default is 60000.
export_interval_millis=10000
; How long the export can run before it is cancelled. In milliseconds. Default is 30000.
export_timeout_millis=9000

; Represents OtlpGrpcMetricExporterOptions structure fields
[otlp_exporter]
; Flag if exporter is enabled. Default is 0.
enabled={{ telgateway_otlp_exporter_enabled }}
; The endpoint to export to. By default the OpenTelemetry Collector's default endpoint.
endpoint={{ telgateway_otlp_exporter_endpoint }}

; Flag whether to use ssl credentials. Default is 0.
;use_ssl_credentials=0
; Specifies path to .pem file to be used for SSL encryption.
;ssl_credentials_cacert_path=
; In-memory string representation of .pem file to be used for SSL encryption.
;ssl_credentials_cacert_as_string=
; Timeout for grpc deadline. In milliseconds.
;timeout_msec=
; User agent
;user_agent=

; Represents PrometheusExporterOptions structure fields
[prometheus_exporter]
; Flag if exporter is enabled. Default is 0.
enabled={{ telgateway_prometheus_exporter_enabled }}
; The endpoint the Prometheus backend can collect metrics from. Default is "localhost:9464".
url={{ telgateway_prometheus_exporter_endpoint }}

[logger]
server=ip:{{ hercules_host }}:9322
station={{ stationname }}.C_{{ hostvars[inventory_hostname]['tags']['Role'].split('-')[-1] | upper }}.Telgateway-{{ hostvars[inventory_hostname]['private_ip_address'].split('.')[-1] }}
reportseh=1
