; {{ ansible_managed }}

[comm]
{% if non_gdk_table_comm %}
{{ non_gdk_table_comm }}
{% endif %}

[config]
multiexeport=2349
smemmultiexeport=2349

[managers]
manager=tcp
manager=tcpd
manager=tcpmux
manager=smemmux
manager=ssl_out

[tcp]
type=tcp
port=2348
maxconnectionsperthread=3
option.islocal=1
option.protocol=3
option.framesize=64000
option.compressbits=0
option.logfile=d:\apps\logs\c_tables\protolocal.log
option.keepalive=30000/180000
gatherstatistic=2

[tcpd]
type=tcp
port=2350
maxconnectionsperthread=3
option.framesize=1000000
option.intcpbuffer=1000000
option.outtcpbuffer=1000000
option.protocol=5
option.islocal=1
option.logfile=d:\apps\logs\c_tables\protolocald.log
option.keepalive=30000/180000
gatherstatistic=2

[tcpmux]
type=tcpmux
port=2349
gatherstatistic=1

[smemmux]
type=smemmux
port=2349
gatherstatistic=1

[ssl_out]
type=ssl
option.logfile=d:\apps\logs\c_tables\protolocalssl.log
clienttrustedcert=d:\apps\credentials\ca_disp.crt

[multiexe]
{{ non_gdk_table_server_multiexes }}

[exe]
{{ non_gdk_table_server_exes }}

[logger]
server=ip:{{ hercules_host }}:9322
station={{ stationname }}.TABLESERVER-{{ hostvars[inventory_hostname]['private_ip_address'].split('.')[-1] }}
reportseh=1


[telemetry.targets]
hercules = true
gateway = true
[telemetry.gateway.conn-params]
address = ip:127.0.0.1:5447
instance = TelgatewayInstance
[telemetry.metrics.tags]
application = non-gdk_table_server
environment = {{ hostvars[inventory_hostname].tags.Environment }}
name = {{ hostvars[inventory_hostname].tags.Name }}
instanceid = {{ hostvars[inventory_hostname].instance_id }}
platform = {{ hostvars[inventory_hostname].tags.Platform }}
zone = {{ hostvars[inventory_hostname].tags.Zone }}
station_name = {{ stationname }}.TABLESERVER-{{ hostvars[inventory_hostname]['private_ip_address'].split('.')[-1] }}
service_name = non-gdk_table_server
[telemetry.metrics.filters.1]
regex = .*
