; {{ ansible_managed }}

[comm]
{% if gdk_table_comm %}
{{ gdk_table_comm }}
{% endif %}

{% if gdk_table_config %}
[config]
{{ gdk_table_config }}
{% endif %}

{% if gdk_table_managers %}
[managers]
{{ gdk_table_managers }}
{% endif %}

[tcp]
{% if gdk_table_tcp %}
{{ gdk_table_tcp }}
{% endif %}

[tcpd]
{% if gdk_table_tcpd %}
{{ gdk_table_tcpd }}
{% endif %}

[tcpmux]
{% if gdk_table_tcpmux %}
{{ gdk_table_tcpmux }}
{% endif %}

[smemmux]
{% if gdk_table_smemmux %}
{{ gdk_table_smemmux }}
{% endif %}


[ssl_out]
{% if gdk_table_ssl_out %}
{{ gdk_table_ssl_out }}
{% endif %}

[multiexe]
{% if gdk_table_multiexe %}
{{ gdk_table_multiexe }}
{% endif %}

[exe]
{% if gdk_table_exe %}
{{ gdk_table_exe }}
{% endif %}

{% if gdk_table_start %}
[start]
{{ gdk_table_start }}
{% endif %}

[logger]
{% if gdk_table_logger %}
{{ gdk_table_logger }}
{% endif %}

[telemetry.targets]
hercules = true
gateway = true
[telemetry.gateway.conn-params]
address = ip:127.0.0.1:5447
instance = TelgatewayInstance
[telemetry.metrics.tags]
application = gdk_table_server
environment = {{ hostvars[inventory_hostname].tags.Environment }}
name = {{ hostvars[inventory_hostname].tags.Name }}
instanceid = {{ hostvars[inventory_hostname].instance_id }}
platform = {{ hostvars[inventory_hostname].tags.Platform }}
zone = {{ hostvars[inventory_hostname].tags.Zone }}
station_name = {{ stationname }}.GDKTABLESERVER-{{ hostvars[inventory_hostname]['private_ip_address'].split('.')[-1] }}
service_name = gdk_table_server
[telemetry.metrics.filters.1]
regex = .*
